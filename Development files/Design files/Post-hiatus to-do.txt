- Read through documentation and Warhammer 40k 8th ed rules
- Commit and push uncommited changes to repo
- Roll-back code to the state it was in the previous commit
- Set up repo in Pycharm with virtual environment
- Convert documentation to markdown
- Run some test games while reading through the code
- Tidy up branches

- Update resolution and sprite scalling
	- Consider a dictionary look up for placing UI elements and text
	- Consider changing the sprite size (16x16? 24x24?)

- Consider reworking model sizes for models larger than 1x1, perhaps basing larger model sizes on 
the relative model area ratio rather than largest dimension.
	- E.g. Small infantry models typically have a base with an area of about 49.1 cm^2. If we 
	give a similar model a size of 1x1 in our game, then for another model to be size 2x2, they
	would need to have a base area of at least 196.4 cm^2 (4x the infantry base).

- Start making amends to code, starting with efficiency changes
	X Don't import everything from Pygame.locals
	- Battlefields as SQL tables
	- Other loaded data as CSV files to be loaded into the SQL DB
	- Update coherency function to increase efficiency
		- Add models to a "checked" list once they have already been compared to all models 
		in the notFound list
		- Verify coherency by checking if the notFound list is empty
	- Update pathfinding for models that are larger than 1x1
	- Use functions, methods and dictionaries to prevent indenting too far

- Consider some design changes
	- Blast ranges for grenades?
		- "Blast" may have to be an ability rather than a weapon type, else weapons like
		light grenades would be OP.
- Consider adding rules for melee/range skills of 6-10
	- Instead of granting re-rolls, buffs can give +1 skill
	- In-battle changes to skill would have to be capped at -1/+1